name: CI

on: [ push, pull_request ]

jobs:
  test:
    name: 🧪 Test
    runs-on: ${{ matrix.os }}
    outputs:
      project-version: ${{ steps.get-version.outputs.result }}
      release-exists: ${{ steps.check-release.outputs.result }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]

    steps:
      - name: 👍 Checkout
        uses: actions/checkout@v4

      - name: ♨️ Setup JBR SDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'jetbrains'
          java-version: 21.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐘 Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: 🔓 Grant permission
        run: chmod +x gradlew

      - name: 🛠️ Build
        run: ./gradlew assemble

      - name: 🧪 Test
        run: ./gradlew test

      - name: 📊 Upload Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          include_passed: true

      - name: 📝 Get project version
        id: get-version
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const fs = require('fs');
            const path = './gradle.properties';
            const content = fs.readFileSync(path, 'utf8');
            const versionMatch = content.match(/version\s*=\s*([^\n\r]+)/);
            if (versionMatch) {
              const version = versionMatch[1].trim();
              console.log(`Version: ${version}`);
              return version.toString()
            } else {
              throw new Error('Version not found in gradle.properties');
            }

      # Check if exists a release with prefix 'v'
      - name: 🔍 Check if release exists
        id: check-release
        uses: actions/github-script@v6
        with:
          result-encoding: string
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = '${{ steps.get-version.outputs.result }}';
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const exists = releases.some(release => release.name === `v${version}`);
            console.log(`Release v${version} exists: ${exists}`);
            return exists.toString()

  package:
    name: 📦 Package
    if: ${{ needs.test.outputs.release-exists == 'false' }}
    needs: test
    runs-on: ${{ matrix.os }}
    outputs:
      project-version: ${{ needs.test.outputs.project-version }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        include:
          - os: windows-latest
            installer: ./app/**/*.msi
          - os: ubuntu-latest
            installer: ./app/**/*.deb
          - os: macos-latest
            installer: ./app/**/*.dmg

    steps:
      - name: 👍 Checkout
        uses: actions/checkout@v4

      - name: ♨️ Setup JBR SDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'jetbrains'
          java-version: 21.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐘 Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: true

      - name: 🔓 Grant permission
        run: chmod +x gradlew

      - name: 📦 Package
        run: ./gradlew packageReleaseDistributionForCurrentOS -Penv=production

      - name: 📁 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: installer-${{ matrix.os }}
          path: ${{ matrix.installer }}
          retention-days: 1

  release:
    name: 🚀 Release
    needs: package
    runs-on: ubuntu-latest

    steps:
      - name: 👍 Checkout
        uses: actions/checkout@v4

      - name: 📦 Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: 📝 Generate changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          fallback-version: ${{ needs.package.outputs.project-version }}
          skip-commit: 'true'
          skip-bump: 'true'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          output-file: 'false'

      - name: 🚀 Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.changelog.outputs.tag }}
          tag_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          files: ./build/**/*
          token: ${{ secrets.GITHUB_TOKEN }}
