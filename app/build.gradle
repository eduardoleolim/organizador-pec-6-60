import org.apache.tools.ant.taskdefs.condition.Os
import org.eduardoleolim.tasks.addmoduleinfo.AddModuleInfoTask

plugins {
  id 'org.eduardoleolim.kotlin-application-conventions'
  id 'org.beryx.jlink' version '3.0.1'
  id 'org.jetbrains.compose' version '1.5.10'
}

ext {
  moduleName = 'org.eduardoleolim.organizadorpec660.app'
}

description = 'Organizador de formatos PEC-6-60'

dependencies {
  implementation project(':core')
  implementation(compose.desktop.currentOs) {
    exclude group: 'org.jetbrains.compose.material'
  }
  implementation compose.materialIconsExtended
  implementation compose.material3
  implementation "cafe.adriel.voyager:voyager-navigator:$voyagerVersion"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-swing:$coroutinesVersion"
  implementation("com.github.Dansoftowner:jSystemThemeDetector:$themeDetectorVersion") {
    exclude group: 'org.slf4j'
  }
}

kotlin {
  jvmToolchain(17)
}

compileKotlin {
  compilerOptions {
    freeCompilerArgs = ["-Xcontext-receivers=true"]
  }
}

application {
  // Define the main class for the application.
  mainClass = 'org.eduardoleolim.organizadorpec660.app.MainKt'
  applicationDefaultJvmArgs += ['-Dfile.encoding=UTF-8']
}

jlink {
  moduleName = project.moduleName
  mergedModuleName = "${project.moduleName}.merged.module"

  addOptions("--strip-debug", "--compress", "2", "--no-header-files", "--no-man-pages")

  forceMerge("sqlite", "kotlinx-coroutines-core")
  addExtraDependencies("kotlin", "slf4j")

  mergedModule {
    requires 'java.desktop'
    requires 'java.sql'
    requires 'org.slf4j'

    uses 'kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition'
    uses 'kotlin.reflect.jvm.internal.impl.util.ModuleVisibilityHelper'
  }

  launcher {
    name = 'Organizador PEC-6-60'
    args = ['--database={{BIN_DIR}}/../database/organizador-pec-6-60.db']
  }

  jpackage {
    args = ['--database={{BIN_DIR}}/database/organizador-pec-6-60.db']

    outputDir = file("${buildDir}/jpackage")
    imageOutputDir = file("${buildDir}/jpackageImage")

    installerOptions = [
      '--description', description,
      '--copyright', 'Copyrigth 2023-2023 Ángel Eduardo Martínez Leo Lim',
      '--vendor', 'Ángel Eduardo Martínez Leo Lim'
    ]

    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
      installerType = 'msi'
      icon = 'src/main/resources/assets/icon.ico'
      installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
    } else if (Os.isFamily(Os.FAMILY_MAC)) {
      installerType = 'pkg'
      // icon = 'src/main/resources/assets/icon.icns'
      imageOptions += ['--mac-package-identifier', 'org.eduardoleolim.organizadorpec660']
    } else if (Os.isFamily(Os.FAMILY_UNIX)) {
      installerType = 'deb'
      icon = 'src/main/resources/assets/icon.png'
      installerOptions += ['--linux-deb-maintainer', 'eduardoleolim@hotmail.com', '--linux-shortcut']
    }
  }
}

tasks.register('addModuleInfo', AddModuleInfoTask) {
  moduleName = project.moduleName
  jarPath = jlink.jlinkBasePath.get() + '/jlinkjars/' + jar.archiveFileName.get()
  classpath = files(file(jlink.jlinkBasePath.get() + '/jlinkjars/'))
  multiRelease = '17'
}

prepareModulesDir.finalizedBy addModuleInfo
